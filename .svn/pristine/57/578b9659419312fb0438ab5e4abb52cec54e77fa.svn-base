// -----------------------------------------------------------------------
// <copyright file="ClientesD.cs" company="">
// TODO: Update copyright text.
// </copyright>
// -----------------------------------------------------------------------

namespace Datos.Cartera
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using Entities;

    /// <summary>
    /// TODO: Update summary.
    /// </summary>
    public class ClientesD
    {
        public ClientesD()
        {
        }

        public List<maecli> CargarClientes()
        {
            List<maecli> clientes = new List<maecli>();
            using (siimnEntities bd = new siimnEntities())
            {
                try
                {
                    clientes = bd.maecli.Include("pais").Include("ciudad").Include("departamento").Include("maeconta").ToList();
                }
                catch (Exception ex)
                {
                    throw ex;
                }
            }

            return clientes;
        }

        public int ObtenerCodigo()
        {
            int codigo = 0;
            using (siimnEntities bd = new siimnEntities())
            {
                try
                {
                    var query = bd.maecli.Count();
                    if (query > 0)
                    {
                        var query1 = bd.maecli.ToList().OrderByDescending(m => m.codigocli).First();
                        codigo = query1.codigocli + 1;
                    }
                    else
                    {
                        codigo = 1;
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }
            }

            return codigo;
        }

        public bool GuardarCliente(maecli cliente)
        {
            bool guardo = false;
            using (siimnEntities bd = new siimnEntities())
            {
                try
                {
                    bd.maecli.Add(cliente);
                    bd.SaveChanges();
                }
                catch (Exception ex)
                {
                    throw ex;
                }

                guardo = true;
            }

            return guardo;
        }

        public maecli DevolverCliente(int id)
        {
            maecli cliente = new maecli();
            using (siimnEntities bd = new siimnEntities())
            {
                try
                {
                    var query = bd.maecli.Include("pais").Include("ciudad").Include("departamento").Include("maeconta").Include("vendedor").Where(ma => ma.codigocli == id).First();
                    cliente = query;
                }
                catch (Exception ex)
                {
                    throw ex;
                }
            }

            return cliente;
        }

        public bool ActualizarCliente(maecli clientes)
        {
            bool guardo = false;
            using (siimnEntities bd = new siimnEntities())
            {
                try
                {
                    var query = bd.maecli.Where(ma => ma.codigocli == clientes.codigocli).First();
                    query.codigocli = clientes.codigocli;
                    query.nit = clientes.nit;
                    query.digito = clientes.digito;
                    query.nombrecli = clientes.nombrecli;
                    query.factnombr = clientes.factnombr;
                    query.idpais = clientes.idpais;
                    query.idciudad = clientes.idciudad;
                    query.iddpto = clientes.iddpto;
                    query.direccion = clientes.direccion;
                    query.direnvio = clientes.direnvio;
                    query.telefono = clientes.telefono;
                    query.celular = clientes.celular;
                    query.fax = clientes.fax;
                    query.email = clientes.email;
                    query.plazo = clientes.plazo;
                    query.cupomes = clientes.cupomes;
                    query.descuento = clientes.descuento;
                    query.regimen = clientes.regimen;
                    query.idvendedor = clientes.idvendedor;
                    query.grancontrib = clientes.grancontrib;
                    query.causareteica = clientes.causareteica;
                    query.aplicareteica = clientes.aplicareteica;
                    query.causreteiva = clientes.causreteiva;
                    query.desconreteiva = clientes.desconreteiva;
                    query.retexcomprar = clientes.retexcomprar;
                    query.desconretevender = clientes.desconretevender;
                    query.porretencion = clientes.porretencion;
                    query.jefecompr = clientes.jefecompr;
                    query.comprador = clientes.comprador;
                    query.cuenta = clientes.cuenta;
                    bd.SaveChanges();
                }
                catch (Exception ex)
                {
                    throw ex;
                }

                guardo = true;
            }

            return guardo;
        }

        public bool EliminarCliente(int idcli)
        {
            bool result = false;
            using (siimnEntities bd = new siimnEntities())
            {
                try
                {
                    var query = bd.maecli.Where(mae => mae.codigocli == idcli).First();
                    bd.maecli.Remove(query);
                    bd.SaveChanges();
                    result = true;
                }
                catch (Exception ex)
                {
                    throw ex;
                }
            }

            return result;
        }

        public List<maecli> BuscarCliente(string buscar)
        {
            List<maecli> clientes = new List<maecli>();
            using (siimnEntities bd = new siimnEntities())
            {
                var query = bd.maecli.Include("pais").Include("ciudad").Include("departamento").Include("maeconta").
                    Include("vendedor").Where(mae => mae.nit.Contains(buscar)|| mae.nombrecli.Contains(buscar));
                if (query.Count() > 0)
                {
                    clientes = query.ToList();
                }
            }

            return clientes;
        }
    }
}
