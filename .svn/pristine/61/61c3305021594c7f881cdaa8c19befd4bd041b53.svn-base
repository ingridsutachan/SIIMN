// -----------------------------------------------------------------------
// <copyright file="formatosc.cs" company="">
// TODO: Update copyright text.
// </copyright>
// -----------------------------------------------------------------------

namespace Datos.Contable
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using Entities;
    

    /// <summary>
    /// TODO: Update summary.
    /// </summary>
    public class formatosc
    {
        public formatosc()
        {
        }

        public bool Guardarformato(formato format, string encabezado)
        {
            bool result = false;
            using (contableEntities bd = new contableEntities())
            {
                if (format.tipoformato.Equals("1"))
                {
                    var query = bd.formato.Where(frm => frm.idbalance == 1).First();
                    query.nombref = encabezado;
                }
                if (format.tipoformato.Equals("2"))
                {
                    var query = bd.formato.Where(frm => frm.idbalance == 2).First();
                    query.nombref = encabezado;
                }
                bd.formato.Add(format);
                bd.SaveChanges();
                result = true;
            }

            return result;
        }

        public bool ExisteFormato(formato format)
        {
            bool result = false;
            using (contableEntities bd = new contableEntities())
            {
                var query = bd.formato.Where(frm => frm.clasemayor == format.clasemayor && frm.linea == format.linea && frm.tipoformato == format.tipoformato).Count();
                result = query > 0 ? true : false;
            }
            return result;
        }


        public formato DevolverFormato(formato format)
        {
            formato form = new formato();
            using (contableEntities bd = new contableEntities())
            {
                var query = bd.formato.Where(frm => frm.clasemayor == format.clasemayor && frm.linea == format.linea && frm.tipoformato == format.tipoformato).First();
                form = query;
            }
            return form;
        }

        public string DevolverEncabezado(string tipoencabezado)
        {
            string encabezado;
            int idbanlace = int.Parse(tipoencabezado);
            using (contableEntities bd = new contableEntities())
            {
                var query = bd.formato.Where(frm => frm.idbalance == idbanlace ).First();
                encabezado = query.nombref;
            }
            return encabezado;
        }

        public bool ActualizarFormato(formato format, string encabezado)
        {
            bool result = false;
            using (contableEntities bd = new contableEntities())
            {
                if (format.tipoformato.Equals("1"))
                {
                    var query = bd.formato.Where(frm => frm.idbalance == 1).First();
                    query.nombref = encabezado;
                }
                if (format.tipoformato.Equals("2"))
                {
                    var query = bd.formato.Where(frm => frm.idbalance == 2).First();
                    query.nombref = encabezado;
                }
                var query1 = bd.formato.Where(frm => frm.clasemayor == format.clasemayor && frm.linea == format.linea && frm.tipoformato == format.tipoformato).First();
                query1.nombref = format.nombref;
                query1.cuentainicial = format.cuentainicial;
                query1.cuentafinal = format.cuentafinal;
                bd.SaveChanges();
                result = true;
            }

            return result;
        }
    }
}
