// -----------------------------------------------------------------------
// <copyright file="formatos.cs" company="">
// TODO: Update copyright text.
// </copyright>
// -----------------------------------------------------------------------

namespace Negocios.Contable
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using Datos.Contable;
    using Entities.Types;
    using Entities;

    /// <summary>
    /// TODO: Update summary.
    /// </summary>
    public class formatosn
    {
        private formatosc persistencia;

        public formatosn()
        {
            this.persistencia = new formatosc();
        }

        public bool GuardarFormato(FormatoDataSource formato, string encabezado)
        {
            bool result = false;
            formatosbpyg forma = new formatosbpyg();
            forma.tipoformato = formato.TipoFormato;
            forma.nombref = formato.Nombre;
            forma.clasemayor = formato.ClaseCuenta;
            forma.linea = formato.Linea;
            forma.cuentaini = formato.CuentaInicial;
            forma.cuentafin = formato.CuentaFinal;
            result = this.persistencia.Guardarformato(forma, encabezado);
            return result;
        }

        public bool ExisteFormato(FormatoDataSource formato)
        {
            bool result = false;
            formatosbpyg forma = new formatosbpyg();
            forma.tipoformato = formato.TipoFormato;
            forma.nombref = formato.Nombre;
            forma.clasemayor = formato.ClaseCuenta;
            forma.linea = formato.Linea;
            forma.cuentaini = formato.CuentaInicial;
            forma.cuentafin = formato.CuentaFinal;
            result = this.persistencia.ExisteFormato(forma);
            return result;
        }

        public FormatoDataSource DevolverFormato(FormatoDataSource format)
        {
            FormatoDataSource formato = new FormatoDataSource();
            formatosbpyg form = new formatosbpyg();
            form.tipoformato = format.TipoFormato;
            form.clasemayor = format.ClaseCuenta;
            form.linea = format.Linea;
            var items = this.persistencia.DevolverFormato(form);
            formato.TipoFormato = items.tipoformato;
            formato.ClaseCuenta = items.clasemayor;
            formato.Linea = items.linea;
            formato.Nombre = items.nombref;
            formato.CuentaInicial = items.cuentaini;
            formato.CuentaFinal = items.cuentafin;
            return formato;
        }

        public string DevolverEncabezado(string tipoencabezado)
        {
            string encabezado= this.persistencia.DevolverEncabezado(tipoencabezado);
            return encabezado;
        }

        public bool ActualizarFormato(FormatoDataSource formato, string encabezado)
        {
            bool result = false;
            formatosbpyg forma = new formatosbpyg();
            forma.tipoformato = formato.TipoFormato;
            forma.nombref = formato.Nombre;
            forma.clasemayor = formato.ClaseCuenta;
            forma.linea = formato.Linea;
            forma.cuentaini = formato.CuentaInicial;
            forma.cuentafin = formato.CuentaFinal;
            result = this.persistencia.ActualizarFormato(forma, encabezado);
            return result;
        }
    }
}
