////*********************************************************
//
//    <copyright file="presupuestoc.cs" company="Marketing Software de Colombia LTDA">
//    @Autor Ingrid Sutachan
//    @fecha 01 marzo 2014
//    </copyright>
//
////*********************************************************
namespace Datos.Contable
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using Entities;

    /// <summary>
    /// Clase presupuesto de capa de datos
    /// </summary>
    public class Presupuestoc
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Presupuestoc"/> class.
        /// </summary>
        public Presupuestoc()
        {
        }

        /// <summary>
        /// Devuelve el presupuesto
        /// </summary>
        /// <param name="anio">año de presupuesto</param>
        /// <param name="cuenta">cuenta de presupuesto</param>
        /// <returns>lista de presupuesto respectivo al año y a la cuenta</returns>
        public List<presupuesto> DevuelvePres(string anio, string cuenta, int centro)
        {
            using (siimnEntities bd = new siimnEntities())
            {
                List<presupuesto> presupuesto = new List<presupuesto>();
                try
                {
                    var query = bd.presupuesto.Include("mes")
                          .Where(pre => pre.anio == anio && pre.cuenta == cuenta && pre.codcentro == centro).ToList();
                    presupuesto = query;
                }
                catch (Exception ex)
                {
                    throw ex;
                }

                return presupuesto;
            }
        }

        /// <summary>
        /// Guardar presupuesto
        /// </summary>
        /// <param name="presu">presupuesto a guardar</param>
        public bool GuardarPre(List<presupuesto> presu)
        {
            bool result = false;
            using (siimnEntities bd = new siimnEntities())
            {
                try
                {
                    foreach (presupuesto item in presu)
                    {
                        bd.presupuesto.Add(item);
                        bd.SaveChanges();
                        result = true;
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }
            }

            return result;
        }

        /// <summary>
        /// Actualiza presupuesto
        /// </summary>
        /// <param name="presu">presupuesto a actualizar</param>
        public bool UpdatePresup(List<presupuesto> presu)
        {
            bool result = false;
            using (siimnEntities bd = new siimnEntities())
            {
                try
                {
                    foreach (presupuesto item in presu)
                    {
                        var query = bd.presupuesto.Where(pre => pre.anio == item.anio && pre.cuenta == item.cuenta && pre.idmes == item.idmes).First();
                        query.cantidad = item.cantidad;
                        bd.SaveChanges();
                        result = true;
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }
            }

            return result;
        }

        /// <summary>
        /// Eliminar presupuesto
        /// </summary>
        /// <param name="anio">año de presupuesto</param>
        /// <param name="cuenta">cuenta de presupuesto</param>
        /// <returns>booleano si se elimina el presupuesto</returns>
        public bool EliminarPresu(string anio, string cuenta)
        {
            bool result = false;
            using (siimnEntities bd = new siimnEntities())
            {
                try
                {
                    var query = bd.presupuesto.Where(pre => pre.anio == anio && pre.cuenta == cuenta).ToList();

                    foreach (var item in query)
                    {
                        bd.presupuesto.Remove(item);
                    }

                    bd.SaveChanges();
                    result = true;
                }
                catch (Exception ex)
                {
                    throw ex;
                }
            }

            return result;
        }
    }
}
