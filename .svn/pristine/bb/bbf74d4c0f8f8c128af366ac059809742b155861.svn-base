////*********************************************************
//
//    <copyright file="frmnits.cs" company="Marketing Software de Colombia LTDA">
//    @Autor Ingrid Sutachan
//    @fecha 01 marzo 2014
//    </copyright>
//
////*********************************************************
namespace App.Forms.Contable
{
    using System;
    using System.Collections.Generic;
    using System.Windows.Forms;
    using Entities.Types;
    using Negocios.Contable;

    /// <summary>
    /// Clase de formulario de nits
    /// </summary>
    public partial class Frmnits : Form
    {
        /// <summary>
        /// instacia nit de la capa negocios
        /// </summary>
        private Nitsn negocioNit;

        /// <summary>
        /// instacia tipos de nit de la capa negocios
        /// </summary>
        private Tiponitn negocioTipos;

        /// <summary>
        /// instacia ubicacion de la capa negocios
        /// </summary>
        private Ubicacionn negociosUbicacion;

        /// <summary>
        /// identificador de nit 
        /// </summary>
        private int idnit;

        /// <summary>
        /// variable para manejar cierre de formulario
        /// </summary>
        private bool usrClose;

        /// <summary>
        /// variable para manejar creacion o edicion
        /// </summary>
        private string botonclick;

        private Funciones funtions;

        /// <summary>
        /// Initializes a new instance of the <see cref="Frmnits"/> class.
        /// </summary>
        public Frmnits()
        {
            this.InitializeComponent();

            this.negocioNit = new Nitsn();
            this.negocioTipos = new Tiponitn();
            this.negociosUbicacion = new Ubicacionn();
            this.funtions = new Funciones();
            this.CargarDatosNit();
        }

        #region VISUALIZACION

        /// <summary>
        /// Nombres la tabla de nits datagridview
        /// </summary>
        private void NombresTabla()
        {
            dgvnit.Columns[0].Visible = false;
            dgvnit.Columns[1].HeaderText = "NIT";
            dgvnit.Columns[2].HeaderText = "Digito";
            dgvnit.Columns[4].HeaderText = "Nombre";
            dgvnit.Columns[5].HeaderText = "Actividad Economica";
            dgvnit.Columns[10].HeaderText = "Dirección";
            dgvnit.Columns[11].HeaderText = "Telefono";
            dgvnit.Columns[12].HeaderText = "Celular";
            dgvnit.Columns[13].HeaderText = "Email";
            dgvnit.Columns[14].HeaderText = "Tipo Nit";
            dgvnit.Columns[15].HeaderText = "Pais";
            dgvnit.Columns[16].HeaderText = "Departamento";
            dgvnit.Columns[17].HeaderText = "Ciudad";
            dgvnit.Columns[3].Visible = false;
            dgvnit.Columns[6].Visible = false;
            dgvnit.Columns[7].Visible = false;
            dgvnit.Columns[8].Visible = false;
            dgvnit.Columns[9].Visible = false;
            dgvnit.Columns[1].DisplayIndex = 0;
            dgvnit.Columns[2].DisplayIndex = 1;
            dgvnit.Columns[14].DisplayIndex = 2;
            dgvnit.Columns[4].DisplayIndex = 3;
            dgvnit.Columns[5].DisplayIndex = 4;
            dgvnit.Columns[15].DisplayIndex = 5;
            dgvnit.Columns[16].DisplayIndex = 6;
            dgvnit.Columns[17].DisplayIndex = 7;
            dgvnit.Columns[10].DisplayIndex = 8;
            dgvnit.Columns[11].DisplayIndex = 9;
            dgvnit.Columns[12].DisplayIndex = 10;
            dgvnit.Columns[13].DisplayIndex = 11;
        }

        /// <summary>
        /// Cargar datos nit en el datagridview
        /// </summary>
        private void CargarDatosNit()
        {
            List<NitsDataSource> tablaNits = new List<NitsDataSource>();
            tablaNits = this.negocioNit.CargarNits();
            dgvnit.DataSource = tablaNits;
            this.NombresTabla();
        }

        /// <summary>
        /// Cargar los tipos de nits en el combobox
        /// </summary>
        private void CargarTipos()
        {
            try
            {
                combo_tipo.DataSource = this.negocioTipos.CargarTipos();
                combo_tipo.ValueMember = "idtipo";
                combo_tipo.DisplayMember = "nombretipo";
            }
            catch (Exception ex)
            {
                MessageBox.Show("Se presento un error. " + ex.Message);
            }
        }

        /// <summary>
        /// Cargar los paises en el combobox
        /// </summary>
        private void CargarPaises()
        {
            try
            {
                combo_pais.DataSource = this.negociosUbicacion.CargarPais();
                combo_pais.ValueMember = "idpais";
                combo_pais.DisplayMember = "nombrepais";
                combo_pais.SelectedIndex = 2;
            }
            catch (Exception ex)
            {
                MessageBox.Show("Se presento un error. " + ex.Message);
            }
        }

        /// <summary>
        /// Cargar los departamentos en el combobox
        /// </summary>
        /// <param name="idpais">The idpais.</param>
        private void CargarDeptos(int idpais)
        {
            try
            {
                combo_dpto.DataSource = this.negociosUbicacion.CargarDeptos(idpais);
                combo_dpto.ValueMember = "iddpto";
                combo_dpto.DisplayMember = "nombredpto";
            }
            catch (Exception ex)
            {
                MessageBox.Show("Se presento un error. " + ex.Message);
            }
        }

        /// <summary>
        /// Cargar las ciudades en el combobox
        /// </summary>
        /// <param name="iddepto">The iddepto.</param>
        private void CargarCiudades(int iddepto)
        {
            try
            {
                combo_ciudad.DataSource = this.negociosUbicacion.CargarCiudad(iddepto);
                combo_ciudad.ValueMember = "idciudad";
                combo_ciudad.DisplayMember = "nombreciudad";
            }
            catch (Exception ex)
            {
                MessageBox.Show("Se presento un error. " + ex.Message);
            }
        }

        /// <summary>
        /// Campos limpios
        /// </summary>
        private void CamposLimpios()
        {
            txt_numeronit.Text = string.Empty;
            txt_digito.Text = string.Empty;
            txt_nombre.Text = string.Empty;
            txt_actividad.Text = string.Empty;
            txt_direccion.Text = string.Empty;
            combo_pais.Text = string.Empty;
            combo_dpto.Text = string.Empty;
            combo_tipo.Text = string.Empty;
            combo_ciudad.Text = string.Empty;
            txt_telefono.Text = string.Empty;
            txt_celular.Text = string.Empty;
            txt_email.Text = string.Empty;
        }

        /// <summary>
        /// Campos activos.
        /// </summary>
        private void CamposActivos()
        {
            txt_numeronit.Enabled = true;
            txt_digito.Enabled = true;
            txt_nombre.Enabled = true;
            txt_actividad.Enabled = true;
            txt_direccion.Enabled = true;
            combo_tipo.Enabled = true;
            combo_pais.Enabled = true;
            combo_dpto.Enabled = true;
            combo_ciudad.Enabled = true;
            txt_telefono.Enabled = true;
            txt_celular.Enabled = true;
            txt_email.Enabled = true;
        }

        /// <summary>
        /// Campos desactivos.
        /// </summary>
        private void CamposDesactivos()
        {
            txt_numeronit.Enabled = false;
            txt_digito.Enabled = false;
            txt_nombre.Enabled = false;
            txt_actividad.Enabled = false;
            txt_direccion.Enabled = false;
            combo_tipo.Enabled = false;
            combo_pais.Enabled = false;
            combo_dpto.Enabled = false;
            combo_ciudad.Enabled = false;
            txt_telefono.Enabled = false;
            txt_celular.Enabled = false;
            txt_email.Enabled = false;
        }

        #endregion

        #region GUARDAR DATOS
        /// <summary>
        /// Guardar datos en nits
        /// </summary>
        /// <returns>nit guardado</returns>
        private NitsDataSource GuardarDatos()
        {
            NitsDataSource nits = new NitsDataSource();
            nits.Nit = txt_numeronit.Text;
            nits.Digito = txt_digito.Text;
            nits.Tiponit = int.Parse(combo_tipo.SelectedValue.ToString());
            nits.Compania_nits = Program.compa;
            nits.Nombrenit = txt_nombre.Text;
            nits.ActividadEconomica = txt_actividad.Text;
            nits.Idpais = int.Parse(combo_pais.SelectedValue.ToString());
            nits.Iddepartamento = int.Parse(combo_dpto.SelectedValue.ToString());
            nits.Idciudad = int.Parse(combo_ciudad.SelectedValue.ToString());
            nits.Direccion = txt_direccion.Text;
            nits.Telefono = txt_telefono.Text;
            nits.Celular = txt_celular.Text;
            nits.Email = txt_email.Text;
            return nits;
        }

        /// <summary>
        /// Handles the Click event of the Btn_guardar control.
        /// </summary>
        /// <param name="sender">The source of the event.</param>
        /// <param name="e">The <see cref="EventArgs"/> instance containing the event data.</param>
        private void Btn_guardar_Click(object sender, EventArgs e)
        {
            bool validagu = this.ValidaGuardar();
            if (validagu)
            {
                NitsDataSource nits = new NitsDataSource();
                nits = this.GuardarDatos();
                if (this.botonclick.Equals("agregar"))
                {
                    bool existe = this.ExisteNit(nits);

                    if (!existe)
                    {
                        try
                        {
                            this.negocioNit.GuardarNits(nits);
                            MessageBox.Show("El NIT ha sido guardado", "Guardar", MessageBoxButtons.OK);
                            this.CargarDatosNit();
                        }
                        catch (Exception ex)
                        {
                            MessageBox.Show("Se presento un error. " + ex.Message);
                        }

                        this.CamposLimpios();
                        this.CamposDesactivos();
                        btn_guardar.Visible = false;
                    }
                    else
                    {
                        MessageBox.Show("El Nit ya se encuentra ingresado", "Existe", MessageBoxButtons.OK);
                    }
                }

                if (this.botonclick.Equals("editar"))
                {
                    nits.Idnit = this.idnit;
                    try
                    {
                        this.negocioNit.ActualizarNits(nits);
                        MessageBox.Show("El NIT ha sido actualizado", "actualizar", MessageBoxButtons.OK);
                        this.CamposLimpios();
                        this.CamposDesactivos();
                        this.CargarDatosNit();
                    }
                    catch (Exception ex)
                    {
                        MessageBox.Show("Se presento un error. " + ex.Message);
                    }
                }
            }
        }

        #endregion

        #region VALIDACIONES

        /// <summary>
        /// Existe nit.
        /// </summary>
        /// <param name="nits">nit a verificar</param>
        /// <returns>booleano que rectifica si existe nit</returns>
        private bool ExisteNit(NitsDataSource nits)
        {
            bool existe = false;
            try
            {
                existe = this.negocioNit.ExisteNit(nits);
            }
            catch (Exception ex)
            {
                MessageBox.Show("Se presento un error. " + ex.Message);
            }

            return existe;
        }

        /// <summary>
        /// Validas the guardar.
        /// </summary>
        /// <returns>booleano si guarda o no</returns>
        private bool ValidaGuardar()
        {
            bool result = false;
            if (!txt_numeronit.Text.Equals(string.Empty) && !txt_digito.Text.Equals(string.Empty)
                && !txt_nombre.Text.Equals(string.Empty) && !txt_actividad.Text.Equals(string.Empty)
                && !combo_pais.Text.Equals(string.Empty) && !combo_dpto.Text.Equals(string.Empty)
                && !combo_ciudad.Text.Equals(string.Empty) && !combo_tipo.Text.Equals(string.Empty)
                && !txt_celular.Text.Equals(string.Empty))
            {
                if (!txt_email.Text.Equals(string.Empty))
                {
                    if (txt_email.Text.Contains(".") && txt_email.Text.Contains("@"))
                    {
                        result = true;
                    }
                    else
                    {
                        MessageBox.Show("Debe ingresar una cuenta de correo valida", "ERROR", MessageBoxButtons.OK);
                        result = false;
                    }
                }
                else
                {
                    result = true;
                }
            }
            else
            {
                result = false;
                MessageBox.Show("Debe llenar todos los campos requeridos", "ERROR", MessageBoxButtons.OK);
            }

            return result;
        }

        #endregion

        #region BOTONES CLICK
        /// <summary>
        /// Handles the Click event of the Btn_nuevo control.
        /// </summary>
        /// <param name="sender">The source of the event.</param>
        /// <param name="e">The <see cref="EventArgs"/> instance containing the event data.</param>
        private void Btn_nuevo_Click(object sender, EventArgs e)
        {
            this.CamposActivos();
            this.CamposLimpios();
            btn_guardar.Enabled = true;
            btn_editar.Enabled = false;
            btn_eliminar.Enabled = false;
            btn_buscar.Enabled = false;
            this.CargarTipos();
            this.CargarPaises();
            this.botonclick = "agregar";
        }

        /// <summary>
        /// Handles the Click event of the Btn_eliminar control.
        /// </summary>
        /// <param name="sender">The source of the event.</param>
        /// <param name="e">The <see cref="EventArgs"/> instance containing the event data.</param>
        private void Btn_eliminar_Click(object sender, EventArgs e)
        {
            this.CamposLimpios();
            this.CamposDesactivos();
            int idnit_eliminar = int.Parse(dgvnit.CurrentRow.Cells[0].Value.ToString());
            DialogResult result = MessageBox.Show("Esta seguro que desea eliminar?", "ELIMINAR", MessageBoxButtons.YesNo);
            if (result == DialogResult.Yes)
            {
                try
                {
                    if (this.negocioNit.EliminarNit(idnit_eliminar))
                    {
                        MessageBox.Show("Eliminado");
                    }
                }
                catch (Exception ex)
                {
                    MessageBox.Show("Se presento un error. " + ex.Message);
                }

                this.CargarDatosNit();
            }
        }

        /// <summary>
        /// Handles the Click event of the Btn_editar control.
        /// </summary>
        /// <param name="sender">The source of the event.</param>
        /// <param name="e">The <see cref="EventArgs"/> instance containing the event data.</param>
        private void Btn_editar_Click(object sender, EventArgs e)
        {
            int id = int.Parse(dgvnit.CurrentRow.Cells[0].Value.ToString());
            NitsDataSource nits = new NitsDataSource();
            btn_guardar.Enabled = true;
            this.botonclick = "editar";
            try
            {
                nits = this.negocioNit.DevolverNits(id);
            }
            catch (Exception ex)
            {
                MessageBox.Show("Se presento un error. " + ex.Message);
            }

            this.CamposActivos();
            this.CargarTipos();
            this.CargarPaises();
            this.CargarDeptos(nits.Idpais);
            this.CargarCiudades(nits.Iddepartamento);
            this.idnit = nits.Idnit;
            txt_numeronit.Text = nits.Nit;
            txt_digito.Text = nits.Digito;
            combo_tipo.SelectedItem = nits.Nombretipo;
            txt_nombre.Text = nits.Nombrenit;
            txt_actividad.Text = nits.ActividadEconomica;
            combo_pais.SelectedValue = nits.Idpais;
            combo_dpto.SelectedValue = nits.Iddepartamento;
            combo_ciudad.SelectedValue = nits.Idciudad;
            txt_direccion.Text = nits.Direccion;
            txt_telefono.Text = nits.Telefono;
            txt_celular.Text = nits.Celular;
            txt_email.Text = nits.Email;
        }

        /// <summary>
        /// Handles the Click event of the Btn_buscar control.
        /// </summary>
        /// <param name="sender">The source of the event.</param>
        /// <param name="e">The <see cref="EventArgs"/> instance containing the event data.</param>
        private void Btn_buscar_Click(object sender, EventArgs e)
        {
            List<NitsDataSource> nitdatasource = new List<NitsDataSource>();
            try
            {
                nitdatasource = this.negocioNit.BuscarNit(txt_buscar.Text);
                if (nitdatasource.Count > 0)
                {
                    dgvnit.DataSource = nitdatasource;
                    this.NombresTabla();
                }
                else
                {
                    MessageBox.Show("No se encuentra ningun resultado", "BUSQUEDA", MessageBoxButtons.OK);
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Se presento un error. " + ex.Message);
            }
        }
        #endregion

        #region EVENTOS TEXTBOX COMBOS 

        /// <summary>
        /// Handles the SelectionChangeCommitted event of the Combo_pais control.
        /// </summary>
        /// <param name="sender">The source of the event.</param>
        /// <param name="e">The <see cref="EventArgs"/> instance containing the event data.</param>
        private void Combo_pais_SelectionChangeCommitted(object sender, EventArgs e)
        {
            int idpais = int.Parse(combo_pais.SelectedValue.ToString());
            this.CargarDeptos(idpais);
        }

        /// <summary>
        /// Handles the SelectionChangeCommitted event of the Combo_dpto control.
        /// </summary>
        /// <param name="sender">The source of the event.</param>
        /// <param name="e">The <see cref="EventArgs"/> instance containing the event data.</param>
        private void Combo_dpto_SelectionChangeCommitted(object sender, EventArgs e)
        {
            int idepto = int.Parse(combo_dpto.SelectedValue.ToString());
            this.CargarCiudades(idepto);
        }

        /// <summary>
        /// Handles the CellClick event of the Dgvnit control.
        /// </summary>
        /// <param name="sender">The source of the event.</param>
        /// <param name="e">The <see cref="DataGridViewCellEventArgs"/> instance containing the event data.</param>
        private void Dgvnit_CellClick(object sender, DataGridViewCellEventArgs e)
        {
            if (dgvnit.SelectedCells.Count > 0)
            {
                btn_editar.Enabled = true;
                btn_eliminar.Enabled = true;
            }
        }

        /// <summary>
        /// Handles the KeyPress event of the Txt_buscar control.
        /// </summary>
        /// <param name="sender">The source of the event.</param>
        /// <param name="e">The <see cref="KeyPressEventArgs"/> instance containing the event data.</param>
        private void Txt_buscar_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (e.KeyChar == (char)Keys.Enter)
            {
                e.Handled = true;
                EventArgs eve = new EventArgs();
                this.Btn_buscar_Click(sender, eve);
                if (txt_buscar.Text.Equals(string.Empty))
                {
                    this.CargarDatosNit();
                }
            }
        }
        #endregion

        #region SALIR FORMULARIO

        /// <summary>
        /// Handles the Click event of the Salircuent control.
        /// </summary>
        /// <param name="sender">The source of the event.</param>
        /// <param name="e">The <see cref="EventArgs"/> instance containing the event data.</param>
        private void Salircuent_Click(object sender, EventArgs e)
        {
            DialogResult result = MessageBox.Show("Esta seguro que desea salir?", "SALIR", MessageBoxButtons.YesNo);
            if (result == DialogResult.Yes)
            {
                this.usrClose = true;
                this.Close();
            }
        }

        /// <summary>
        /// Handles the FormClosing event of the Frmnits control.
        /// </summary>
        /// <param name="sender">The source of the event.</param>
        /// <param name="e">The <see cref="FormClosingEventArgs"/> instance containing the event data.</param>
        private void Frmnits_FormClosing(object sender, FormClosingEventArgs e)
        {
            if (!this.usrClose)
            {
                DialogResult result = MessageBox.Show("Esta seguro que desea salir?", "SALIR", MessageBoxButtons.YesNo);
                if (result == DialogResult.No)
                {
                    e.Cancel = true;
                }
            }
        }

        #endregion

        #region ENTER TAB

        private void EnterTabVal_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (e.KeyChar == (char)Keys.Enter)
            {
                e.Handled = true;
                SendKeys.Send("{TAB}");
            }
            else
            {
                e.Handled = this.funtions.ValidacionNumerico(e).Handled;
            }
        }

        private void EnterTab_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (e.KeyChar == (char)Keys.Enter)
            {
                e.Handled = true;
                SendKeys.Send("{TAB}");
            }
        }

        #endregion

        private void btn_imprimir_Click(object sender, EventArgs e)
        {
            reportes.Form_ReporteNits frm = new reportes.Form_ReporteNits();
            frm.Show();
        }
    }
}
