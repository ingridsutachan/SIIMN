using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using Negocios.Contable;

namespace App.Forms.Contable
{
    public partial class Form_VisualContable : Form
    {
        private Cuentan negocioCuenta;

        private string busqueda;

        private string menub;

        private Form_Cuenta form_cuenta;

        public Form_VisualContable(string buscar, string menu, Form_Cuenta formcuenta)
        {
            this.negocioCuenta = new Cuentan();
            InitializeComponent();
            this.busqueda = buscar;
            this.menub = menu;
            this.form_cuenta = formcuenta;
            this.Visual();
        }



        private void Visual()
        {
            if (busqueda.Equals("vendedor"))
            {
                this.Text = "VENDEDORES";
                ts_buscar1.Text = "Codigo";
                ts_buscar2.Text = "Nombre";
                ts_buscar3.Text = "Cedula";
                ts_buscar4.Text = "Activos";
                /* List<VendedorDataSource> tablavendedores = new List<VendedorDataSource>();
                 try
                 {
                     tablavendedores = this.negocioVendedor.Busqueda("todos", "todos");
                 }
                 catch (Exception ex)
                 {
                     MessageBox.Show("Se presento un error. " + ex.Message);
                 }
                 dgv_busqueda.DataSource = tablavendedores;
                 this.TablaVendedor();*/
            }
        }

        private void EliminarCuenta()
        {
          /*  string cuenta = dgvdatoscuenta.CurrentRow.Cells[0].Value.ToString();
            DialogResult result = MessageBox.Show("Esta seguro que desea eliminar?", "ELIMINAR", MessageBoxButtons.YesNo);
            if (result == DialogResult.Yes)
            {
                try
                {
                    if (this.negocioCuenta.EliminarCuenta(cuenta))
                    {
                        MessageBox.Show("La cuenta fue Eliminada", "ELIMINAR", MessageBoxButtons.OK);
                    }
                }
                catch (Exception ex)
                {
                    MessageBox.Show("Se presento un error. " + ex.Message);
                }

                this.CargarDatosCuenta();*/
        }

        private void BuscarCuenta()
        {
           /* bool existe = this.negocioCuenta.ExisteBuscar(txt_buscar.Text);
            if (existe)
            {
                List<AsientosDataSource> datasSource = new List<AsientosDataSource>();
                datasSource = this.negocioCuenta.BuscarCuenta(txt_buscar.Text);
                if (datasSource.Count() > 0)
                {
                    this.NombresColumna();
                    dgvdatoscuenta.DataSource = datasSource;
                }
                else
                {
                    MessageBox.Show("No se encuentra ningun resultado", "BUSQUEDA", MessageBoxButtons.OK);
                }
            }
            else
            {
                MessageBox.Show("NO SE ENCUENTRA RESULTADO", "CUENTA", MessageBoxButtons.OK);
            }*/
        }

        private void BuscarCuentasdfsfs()
        {
            /*bool existe = this.negocioCuenta.ExisteBuscar(txt_buscar.Text);
            if (existe)
            {
                List<AsientosDataSource> datasSource = new List<AsientosDataSource>();
                datasSource = this.negocioCuenta.BuscarCuenta(txt_buscar.Text);
                if (datasSource.Count() > 0)
                {
                    this.NombresColumna();
                    dgvdatoscuenta.DataSource = datasSource;
                }
                else
                {
                    MessageBox.Show("No se encuentra ningun resultado", "BUSQUEDA", MessageBoxButtons.OK);
                }
            }
            else
            {
                MessageBox.Show("NO SE ENCUENTRA RESULTADO", "CUENTA", MessageBoxButtons.OK);
            }*/
        }

        private void NombresColumna()
        {
            /*dgvdatoscuenta.Columns[0].HeaderText = "Cuenta";
            dgvdatoscuenta.Columns[1].Visible = false;
            dgvdatoscuenta.Columns[2].HeaderText = "Nombre";
            dgvdatoscuenta.Columns[3].HeaderText = "Tipo de Cuenta";
            dgvdatoscuenta.Columns[4].HeaderText = "Pide NIT";
            dgvdatoscuenta.Columns[5].HeaderText = "Centro de Costos";
            dgvdatoscuenta.Columns[6].HeaderText = "Ajustes Integrales";
            dgvdatoscuenta.Columns[7].HeaderText = "NIT Ajustes";
            dgvdatoscuenta.Columns[8].HeaderText = "Cuenta Ajustes";
            dgvdatoscuenta.Columns[9].HeaderText = "Cuenta Correción";
            dgvdatoscuenta.Columns[10].HeaderText = "D/C";
            dgvdatoscuenta.Columns[11].HeaderText = "Cuenta Retención";
            dgvdatoscuenta.Columns[12].HeaderText = "% Retención";
            dgvdatoscuenta.Columns[13].HeaderText = "Concepto de Retención";
            dgvdatoscuenta.Columns[14].HeaderText = "Cuenta Cierre Impuestos";
            dgvdatoscuenta.Columns[15].Visible = false;
            dgvdatoscuenta.Columns[16].Visible = false;
            dgvdatoscuenta.Columns[0].Width = 90;
            dgvdatoscuenta.Columns[2].Width = 250;
            dgvdatoscuenta.Columns[3].Width = 70;
            dgvdatoscuenta.Columns[4].Width = 70;
            dgvdatoscuenta.Columns[5].Width = 70;
            dgvdatoscuenta.Columns[6].Width = 70;
            dgvdatoscuenta.Columns[7].Width = 90;
            dgvdatoscuenta.Columns[8].Width = 90;
            dgvdatoscuenta.Columns[9].Width = 90;
            dgvdatoscuenta.Columns[10].Width = 50;
            dgvdatoscuenta.Columns[11].Width = 90;
            dgvdatoscuenta.Columns[12].Width = 70;
            dgvdatoscuenta.Columns[13].Width = 100;
            dgvdatoscuenta.Columns[14].Width = 90;*/
        }

        /// <summary>
        /// Cargar lista de cuentas en datagriedview
        /// </summary>
        private void CargarDatosCuenta()
        {
            /*List<AsientosDataSource> datasSource = new List<AsientosDataSource>();
            try
            {
                datasSource = this.negocioCuenta.CargarCuenta();
            }
            catch (Exception ex)
            {
                MessageBox.Show("Se presento un error. " + ex.Message);
            }

            dgvdatoscuenta.DataSource = datasSource;
            this.NombresColumna();*/
        }

    }
}
